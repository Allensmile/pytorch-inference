<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\pytorch\demo\main.cpp" />
    <ClCompile Include="..\..\pytorch\src\pytorch_interface.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\..\pytorch\include\pytorch_interface.h" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{27BEC651-0693-3678-9670-D3914AF2922C}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>pytorch</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\pytorch-inference\makefile\pytorch\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">pytorch.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">pytorch</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">pytorch.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">pytorch</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\pytorch-inference\makefile\pytorch\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">pytorch.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">pytorch</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\pytorch-inference\makefile\pytorch\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">pytorch.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">pytorch</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IncludePath>..\..\pytorch\include;..\..\pytorch\utils;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>F:\pytorch-inference\thirdparty\libtorch\include;F:\pytorch-inference\thirdparty\libtorch\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\include;D:\Program Files (x86)\CUDA\include;F:\pytorch-inference\thirdparty\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <CppLanguageStandard>c++11</CppLanguageStandard>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>F:\pytorch-inference\thirdparty\libtorch\include;F:\pytorch-inference\thirdparty\libtorch\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\include;D:\Program Files (x86)\CUDA\include;F:\pytorch-inference\thirdparty\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>F:\pytorch-inference\thirdparty\libtorch\include;F:\pytorch-inference\thirdparty\libtorch\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\include;D:\Program Files (x86)\CUDA\include;F:\pytorch-inference\thirdparty\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>F:\pytorch-inference\thirdparty\libtorch\lib\torch.lib;C:\Program Files\NVIDIA Corporation\NvToolsExt\lib\x64\nvToolsExt64_1.lib;D:\Program Files (x86)\CUDA\lib\x64\cudart_static.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400d.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400d.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400d.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400d.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400d.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400d.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400d.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400d.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400d.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400d.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400d.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400d.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400d.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400d.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400d.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400d.lib;F:\pytorch-inference\thirdparty\libtorch\lib\caffe2_gpu.lib;F:\pytorch-inference\thirdparty\libtorch\lib\caffe2.lib;F:\pytorch-inference\thirdparty\libtorch\lib\c10_cuda.lib;F:\pytorch-inference\thirdparty\libtorch\lib\c10.lib;D:\Program Files (x86)\CUDA\lib\x64\cufft.lib;D:\Program Files (x86)\CUDA\lib\x64\curand.lib;D:\Program Files (x86)\CUDA\lib\x64\cublas.lib;D:\Program Files (x86)\CUDA\lib\x64\cudart_static.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>F:/pytorch-inference/makefile/pytorch/Debug/pytorch.lib</ImportLibrary>
      <ProgramDataBaseFile>F:/pytorch-inference/makefile/pytorch/Debug/pytorch.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>..\..\thirdparty\libtorch\include;..\..\thirdparty\libtorch\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\include;D:\Program Files (x86)\CUDA\include;..\..\thirdparty\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <CppLanguageStandard>c++11</CppLanguageStandard>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <WholeProgramOptimization>true</WholeProgramOptimization>
      <OpenMPSupport>true</OpenMPSupport>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>F:\pytorch-inference\thirdparty\libtorch\include;F:\pytorch-inference\thirdparty\libtorch\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\include;D:\Program Files (x86)\CUDA\include;F:\pytorch-inference\thirdparty\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>F:\pytorch-inference\thirdparty\libtorch\include;F:\pytorch-inference\thirdparty\libtorch\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\include;D:\Program Files (x86)\CUDA\include;F:\pytorch-inference\thirdparty\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\..\thirdparty\libtorch\lib\torch.lib;C:\Program Files\NVIDIA Corporation\NvToolsExt\lib\x64\nvToolsExt64_1.lib;D:\Program Files (x86)\CUDA\lib\x64\cudart_static.lib;..\..\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;..\..\thirdparty\libtorch\lib\caffe2_gpu.lib;..\..\thirdparty\libtorch\lib\caffe2.lib;..\..\thirdparty\libtorch\lib\c10_cuda.lib;..\..\thirdparty\libtorch\lib\c10.lib;D:\Program Files (x86)\CUDA\lib\x64\cufft.lib;D:\Program Files (x86)\CUDA\lib\x64\curand.lib;D:\Program Files (x86)\CUDA\lib\x64\cublas.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>F:/pytorch-inference/makefile/pytorch/Release/pytorch.lib</ImportLibrary>
      <ProgramDataBaseFile>F:/pytorch-inference/makefile/pytorch/Release/pytorch.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>F:\pytorch-inference\thirdparty\libtorch\include;F:\pytorch-inference\thirdparty\libtorch\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\include;D:\Program Files (x86)\CUDA\include;F:\pytorch-inference\thirdparty\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>MinSizeRel/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <CppLanguageStandard>c++11</CppLanguageStandard>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>F:\pytorch-inference\thirdparty\libtorch\include;F:\pytorch-inference\thirdparty\libtorch\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\include;D:\Program Files (x86)\CUDA\include;F:\pytorch-inference\thirdparty\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>F:\pytorch-inference\thirdparty\libtorch\include;F:\pytorch-inference\thirdparty\libtorch\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\include;D:\Program Files (x86)\CUDA\include;F:\pytorch-inference\thirdparty\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>F:\pytorch-inference\thirdparty\libtorch\lib\torch.lib;C:\Program Files\NVIDIA Corporation\NvToolsExt\lib\x64\nvToolsExt64_1.lib;D:\Program Files (x86)\CUDA\lib\x64\cudart_static.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\libtorch\lib\caffe2_gpu.lib;F:\pytorch-inference\thirdparty\libtorch\lib\caffe2.lib;F:\pytorch-inference\thirdparty\libtorch\lib\c10_cuda.lib;F:\pytorch-inference\thirdparty\libtorch\lib\c10.lib;D:\Program Files (x86)\CUDA\lib\x64\cufft.lib;D:\Program Files (x86)\CUDA\lib\x64\curand.lib;D:\Program Files (x86)\CUDA\lib\x64\cublas.lib;D:\Program Files (x86)\CUDA\lib\x64\cudart_static.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>F:/pytorch-inference/makefile/pytorch/MinSizeRel/pytorch.lib</ImportLibrary>
      <ProgramDataBaseFile>F:/pytorch-inference/makefile/pytorch/MinSizeRel/pytorch.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>F:\pytorch-inference\thirdparty\libtorch\include;F:\pytorch-inference\thirdparty\libtorch\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\include;D:\Program Files (x86)\CUDA\include;F:\pytorch-inference\thirdparty\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>RelWithDebInfo/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <CppLanguageStandard>c++11</CppLanguageStandard>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>F:\pytorch-inference\thirdparty\libtorch\include;F:\pytorch-inference\thirdparty\libtorch\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\include;D:\Program Files (x86)\CUDA\include;F:\pytorch-inference\thirdparty\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>F:\pytorch-inference\thirdparty\libtorch\include;F:\pytorch-inference\thirdparty\libtorch\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\include;D:\Program Files (x86)\CUDA\include;F:\pytorch-inference\thirdparty\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>F:\pytorch-inference\thirdparty\libtorch\lib\torch.lib;C:\Program Files\NVIDIA Corporation\NvToolsExt\lib\x64\nvToolsExt64_1.lib;D:\Program Files (x86)\CUDA\lib\x64\cudart_static.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\opencv\build\x64\vc15\lib\opencv_world400.lib;F:\pytorch-inference\thirdparty\libtorch\lib\caffe2_gpu.lib;F:\pytorch-inference\thirdparty\libtorch\lib\caffe2.lib;F:\pytorch-inference\thirdparty\libtorch\lib\c10_cuda.lib;F:\pytorch-inference\thirdparty\libtorch\lib\c10.lib;D:\Program Files (x86)\CUDA\lib\x64\cufft.lib;D:\Program Files (x86)\CUDA\lib\x64\curand.lib;D:\Program Files (x86)\CUDA\lib\x64\cublas.lib;D:\Program Files (x86)\CUDA\lib\x64\cudart_static.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>F:/pytorch-inference/makefile/pytorch/RelWithDebInfo/pytorch.lib</ImportLibrary>
      <ProgramDataBaseFile>F:/pytorch-inference/makefile/pytorch/RelWithDebInfo/pytorch.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>